---
// import Linkarrow from "../../public/svgIcon/linkarrow.astro";

interface Props {
  title: string;
  slug: string;
  videolink: string | "";
  height: string;
}

const { title, videolink, slug, height } = Astro.props;

console.log(videolink);
---

<a
  class="flex group flex-col h-full justify-between gap-3 mx-6 md:mx-0"
  href={`/projects/${slug}`}
  aria-label={title}
  transition:name={slug}
  transition:persist={slug}
>
  <div class=`h-${height} w-full card-halftone p-1 `>
    <div class="outline outline-gray-300 outline-offset-4">
      <video
        autoplay
        aria-label={title}
        preload="none"
        loop
        muted
        playsinline
        class="object-fit h-full w-full [transform:_scale(1)] [transition:_transform_300ms_ease-in-out] [transform-origin:40%_50%] group-focus:outline-none lazy-load"
        data-src={videolink}
      >
        <source src={videolink ? videolink : ""} type="video/mp4" />
        <source src={videolink ? videolink : ""} type="video/webm" />
        <track src="just a video" kind="captions" />
        Your browser does not support the video tag.
      </video>
    </div>
  </div>
  <div class="relative flex flex-row items-center justify-between">
    <h3 class="text-black font-bold z-10" aria-label={title}>{title}</h3>
  </div>
</a>

<style>
  .cardbg::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    background: linear-gradient(#1f92b7, #1f92b7);
    width: 100%;
    height: 95%;
    border-radius: 26px;
  }

  .cardButton::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    background:
      linear-gradient(45deg, rgba(255, 255, 255, 0.1) 49.5%, transparent 50%) no-repeat,
      linear-gradient(#1f92b7, #1f92b7);
    width: 100%;
    height: 85%;
    border-radius: 12px;
  }

  .card-halftone {
    position: relative;
    width: 100%;
    height: 100%;
    background: white;
  }

  .card-halftone:hover {
    border: 2px solid #c4c4c4;
  }

  .card-halftone::after {
    content: "";
    position: absolute;
    inset: 0;
    top: 0.4rem;
    left: 0.4rem;
    width: 100%;
    height: 100%;
    background: radial-gradient(circle, #777777 0.03rem, transparent 0%),
      radial-gradient(circle, #c4c4c4 0.02rem, transparent 0%);
    background-size: 0.15rem 0.15rem;
    background-position:
      0 0,
      0.15rem 0.15rem;
    z-index: -1;
  }
</style>

<script is:inline>
  // // Select all videos with a data-src attribute
  // const videos = document.querySelectorAll("video[data-src]");
  // const config = {
  //   rootMargin: "0px 0px 200px 0px", // start loading a bit before they come into view
  //   threshold: 0.25,
  // };

  // const observer = new IntersectionObserver((entries, observer) => {
  //   entries.forEach((entry) => {
  //     if (entry.isIntersecting) {
  //       const video = entry.target;
  //       const src = video.getAttribute("data-src");
  //       if (src) {
  //         video.querySelector("source").src = src;
  //         video.load();
  //         video.removeAttribute("data-src");
  //       }
  //       observer.unobserve(video);
  //     }
  //   });
  // }, config);

  // videos.forEach((video) => observer.observe(video));
</script>
