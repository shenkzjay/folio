---
import Layout from "../layouts/Layout.astro";
import { Image } from "astro:assets";
import CardLayout from "../layouts/CardLayout.astro";
import LinkedIcon from "../../public/svgIcon/linkedIcon.astro";
import GithubIcon from "../../public/svgIcon/githubIcon.astro";
import MailIcon from "../../public/svgIcon/mailIcon.astro";
import DownloadIcon from "../../public/svgIcon/downloadIcon.astro";

const cards = [
  {
    title: "Online Resume Creator",
    link: "",
    videolink: "vid/newrsume.webm",
    slug: "online-resume-creator",
  },

  {
    title: "React-Online-Code-Editor",
    link: "",
    videolink: "vid/neweditor.webm",
    slug: "react-online-code-editor",
  },

  {
    title: "E-commerce Price Comparison App",
    link: "",
    videolink: "vid/newecom.webm",
    slug: "ecommerce-price-comparison",
  },

  {
    title: "Online Resume Creator",
    link: "",
    videolink: "vid/newrsume.webm",
    slug: "online-resume-creator",
  },

  {
    title: "React-Online-Code-Editor",
    link: "",
    videolink: "vid/neweditor.webm",
    slug: "react-online-code-editor",
  },

  {
    title: "E-commerce Price Comparison App",
    link: "",
    videolink: "vid/newecom.webm",
    slug: "ecommerce-price-comparison",
  },
];
---

<Layout title="">
  <main class="w-[700px] mx-auto relative">
    <header class="flex flex-col gap-4 border px-10 headershit w-[700px] mx-auto">
      <div
        class="flex flex-row items-center justify-between mt-10 gap-8 headertop bg-white mix-blend-multiply"
      >
        <!-- <div class="w-20 h-20 border rounded-full bg-gray-400"></div> -->
        <div class="">
          <h3 class="[font-size:clamp(2rem,5vw,2rem)] font-bold">Olajide Seun</h3>
          <div class="slider relative flex flex-col w-full h-6 overflow-hidden">
            <p id="slide1" class="absolute top-0 bg-white z-20 text-[#7b7b7b]">Web developer</p>
          </div>
        </div>

        <div class="flex items-center gap-2">
          <a href="" class="hover:[transform:translateY(-5px)] [transition:.3s_ease-in]">
            <LinkedIcon />
          </a>
          <a href="" class="hover:[transform:translateY(-5px)] [transition:.3s_ease-in]">
            <GithubIcon />
          </a>
          <a
            href="mailto:senksjay@gmail.com"
            class="hover:[transform:translateY(-5px)] [transition:.3s_ease-in]"
          >
            <MailIcon />
          </a>
        </div>
      </div>

      <div class="flex flex-row justify-between displaytext overflow-hidden h-full items-center">
        <div>
          <p class="w-[25rem] text-[#7b7b7b]">
            making simple, functional and interative interfaces...
          </p>
        </div>
        <div
          class="flex items-center pr-3 justify-center rounded-[10px] border-2 border-black hover:rounded-[20px] [transition:border-radius_.3s_ease-in-out]"
        >
          <a href="" class="px-4 py-2" download> resume </a>
          <span class="flex"> <DownloadIcon /></span>
        </div>
      </div>
    </header>

    <section class="tabdetails border-[.5px] my-[25vh]">
      <div
        class="projectTab active grid md:grid-cols-[repeat(auto-fit,minmax(300px,1fr))] grid-cols-[repeat(auto-fit,minmax(400px,1fr))] gap-12 w-full p-6"
      >
        {
          cards?.map((items, id) => (
            <div class="border-t-[.5px] hover:bg-slate-50">
              <CardLayout title={items.title} videolink={items.videolink} slug={`${items.slug}`} />
            </div>
          ))
        }
      </div>
    </section>
    <foote class="flex flex-row justify-center my-10 text-[#7b7b7b] gap-1 font-thin">
      <span>Olajide Seun</span>
      <span>|</span>
      <span>Web developer</span>
    </foote>
  </main>
</Layout>

<style>
  .chatcard::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    background: linear-gradient(-135deg, #e4e4e4 49%, transparent 50%) 10% 0 / 3vmin 3vmin;
    background-repeat: no-repeat;
    width: 100%;
    height: 100%;
    z-index: -1;
  }

  .chatcardright::before {
    content: "";
    position: absolute;
    top: 0;
    left: 50vmin;
    background: linear-gradient(135deg, #e4e4e4 49%, transparent 50%) 0% 0 / 3vmin 3vmin;
    background-repeat: no-repeat;
    width: 100%;
    height: 100%;
    z-index: -1;
  }
  input[type="radio"] {
    display: none;
  }

  .tabdetails > .projectTab {
    display: none;
  }

  .tabdetails > .projectTab.active {
    display: grid;
  }

  @supports (anchor-name: --slider-menu) {
    .nav {
      anchor-name: --slider-menu;
      display: flex;
    }

    .nav::before {
      content: "";
      position: absolute;
      left: anchor(var(--target) left);
      right: anchor(var(--target) right);
      bottom: anchor(var(--target) bottom);
      transition: all 0.3s;
      border-bottom: 0.3rem solid hsl(from var(--color) h s calc(l * 0.8));
    }

    .nav:has(div > label:not(:hover, :focus-visible))::before {
      visibility: hidden;
      opacity: 0;
      transition: all 0.3s;
    }

    label {
      anchor-name: var(--anchor);
      font-size: 1.2rem;
      font-weight: 500;
      cursor: pointer;
      color: #c4c4c4;
    }

    label.active {
      /* border-bottom: 0.3rem solid red; */
      color: #7b7b7b;
    }

    .nav > div:nth-child(1) {
      --anchor: --item-1;
    }

    .nav > div:nth-child(2) {
      --anchor: --item-2;
    }

    .nav > div:nth-child(3) {
      --anchor: --item-3;
    }

    .nav:has(:nth-child(1) label:is(:hover, :focus-visible)) {
      --target: --item-1;
      --color: red;
    }

    .nav:has(:nth-child(2) label:is(:hover, :focus-visible)) {
      --target: --item-2;
      --color: red;
    }

    .nav:has(:nth-child(3) label:is(:hover, :focus-visible)) {
      --target: --item-3;
      --color: red;
    }

    a:focus-visible {
      outline: none;
    }
  }

  html {
  }

  .headershit {
    position: fixed;
    top: 0;
    animation: heightdown linear both;
    z-index: 1;
    background: repeating-linear-gradient(45deg, rgb(240, 240, 240) 2% 2%, transparent 2.5% 4%);

    border-bottom: none;
  }

  .displaytext {
    animation: displaytext linear both;
  }

  .headertop {
    animation: reducetext linear both;
  }

  .headertop,
  .displaytext,
  .headershit {
    animation-timeline: scroll();
    animation-range: 0px 150px;
  }

  @keyframes heightdown {
    from {
      height: 25vh;
      font-size: 1em;
    }
    to {
      height: 15vh;
      font-size: 1em;
      box-shadow: 0px 5px 20px rgba(0, 0, 0, 0.08);
      background: white;
    }
  }

  @keyframes reducetext {
    to {
      /* transform: translate(0%, -40%); */
      margin-top: 1rem;
    }
  }

  @keyframes displaytext {
    to {
      transform: translate(0%, -100%);
      visibility: hidden;
      opacity: 0;
    }
  }
</style>
