---
import Linkarrow from "../../../public/svgIcon/linkarrow.astro";
import ArrowIcon from "../../../public/svgIcon/arrowIcon.astro";
import CardLayout from "../../layouts/CardLayout.astro";
import Layout from "../../layouts/Layout.astro";
import GithubIcon from "../../../public/svgIcon/githubIcon.astro";

export async function getStaticPaths() {
  const pages = [
    {
      slug: "online-resume-creator",
      title: "Online Resume Creator",
      description:
        "Create and customize your professional resume online. Download a pdf copy in minutes",
      img: "../vid/newrsume.webm",
      tags: [
        "react",
        "typescript",
        "redux-toolkit",
        "tailwindcss",
        "html2pdf",
        "react-query",
        "git",
      ],
      site: "https://resume-builder-ys1u-shenkzjays-projects.vercel.app/",
      github: "https://github.com/shenkzjay/resume-builder",
    },

    {
      slug: "react-online-code-editor",
      title: "React-Online-Code-Editor",
      description:
        "A react code editor playground with code cell blocks that provides a rough sketch whiteboard for your codes",
      img: "../vid/neweditor.webm",
      tags: ["react", "typescript", "bulma.css", "redux-toolkit", "es-build", "CI/CD"],
      site: "",
      github: "https://github.com/shenkzjay/simple-code-editor",
    },

    {
      slug: "ecommerce-price-comparison",
      title: "E-commerce Price Comparison App",
      description:
        "An ecommerce price comparison checker that get the price and variety of an item across some ecommerce platforms",
      img: "../vid/newecom.webm",
      tags: ["nextjs", "typescript", "playwright", "web-scraping", "docker"],
      site: "",
      github: "https://github.com/shenkzjay/Comparison-website/tree/compweb_v1.1",
    },
    {
      slug: "css-arts",
      title: "Css Art Illustrations",
      description:
        "A project inspired by lynn fisher for creating illustrations using pure css with single divs",
      img: "../vid/cssarts.webm",
      tags: ["pure css", "singledivs", "illustration"],
      site: "https://www.csscanvas.com",
      github: "https://github.com/shenkzjay/cssillustri",
    },
  ];

  return pages.map(({ slug, title, description, img, tags, site, github }) => {
    return {
      params: { slug },
      props: { title, description, img, tags, slug, site, github },
    };
  });
}

const { title, description, img, tags, slug, site, github } = Astro.props;
---

<Layout title={slug}>
  <html>
    <body>
      <main class="w-full">
        <div class="md:w-[700px] w-full md:mx-auto relative flex flex-col gap-8">
          <nav class="flex flex-row justify-between mx-6 md:mx-0 mt-12">
            <a
              href="/"
              data-astro-history="replace"
              class="flex flex-row items-center gap-1 hover:font-bold"
            >
              <span class="[transform:scale(-1,1)]"><ArrowIcon /></span>
              Back home</a
            >

            <div class="flex flex-row gap-4">
              {
                github !== "" && (
                  <a
                    href={github}
                    target="_blank"
                    rel="noreferrer"
                    class="flex flex-row items-center gap-2 rounded-[10px]  hover:[transform:scale(1.2)] [transition:transform_.3s_ease-in-out]"
                  >
                    <GithubIcon />
                  </a>
                )
              }

              {
                site !== "" && (
                  <a
                    href={site}
                    target="_blank"
                    rel="noreferrer"
                    class="flex flex-row items-center gap-2 rounded-[10px] border-2 border-black hover:rounded-[20px] [transition:border-radius_.3s_ease-in-out] px-4 py-2"
                  >
                    Go to site
                    <Linkarrow />
                  </a>
                )
              }
            </div>
          </nav>

          <CardLayout title={title} , slug={slug} videolink={img} />
          <p class="mx-6 md:mx-0">{description}</p>
          <ul class="flex flex-row gap-4 flex-wrap mx-6 md:mx-0">
            {
              tags.map((item) => (
                <li class="border bg-[#eaeaea] px-4 py-1 text-sm rounded-[10px] text-[#676767]">
                  {item}
                </li>
              ))
            }
          </ul>
        </div>
      </main>
      <style>
        @media screen and (max-width: 800px) {
          .tobey {
            width: 100%;
          }
        }

        body {
          background-color: var(--bg-color);
          color: var(--font-color);
        }
      </style>
    </body>
  </html>
</Layout>
